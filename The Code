Module Module1

    Sub Main()
        Console.CursorVisible = False
        Randomize()
        Dim theTime As Date
        Dim theTimeCreated As Double
        Dim milk As New CupOfMilk(200, "mmmm Tasty", "Cup Of Milk", "\_/")
        Dim fish As New Fish(150, "Kinda smelly but oh well...", "Fish", " >--) ) ) )*>")
        Dim RottenFlesh As New RottenFlesh(-300, "How could you do such a thing?!?", "Rotten Flesh", "'('_')'")

        Console.WriteLine("Welcome To the Virtual Pet Simulator!: (This is an accelerated version of the Game.)")
        Console.ReadKey()
        Console.WriteLine("Your pet will Constantly loose health from the second it is Created.")
        Console.ReadKey()
        Console.WriteLine("To counter this you will need to feed your pet or play with it to increase its health!")
        Console.ReadKey()
        Console.WriteLine("Good luck - See how long you can last!)")
        Console.ReadKey()
        Console.Clear()
        Console.WriteLine("Please name Your new Pet!")
        Dim pet As New VirtualPet(Console.ReadLine())
        theTime = Now
        theTimeCreated = Timer
        Dim PreviousTime As Double = Timer
        Console.Clear()

        Do
            MainMenu(pet)
            Dim input As String = GetMenuChoice()
            'Lower the health here 

            LowerHealth(pet, PreviousTime)
            PreviousTime = Timer


            Select Case input
                Case 1
                    FeedPet(pet, PreviousTime, milk, fish, RottenFlesh)
                Case 2
                    PlayWithPet(pet, PreviousTime)
                Case 3
                    Console.Clear()
                    DisplayStats(pet, theTime)
                    Console.ReadKey()
                Case 4
                    ChangeName(pet)
                Case 9
                    End
                Case Else
                    Console.WriteLine("Sorry I dont understand")
                    Console.ReadKey()
            End Select

        Loop Until pet.CheckIsAlive = False ' This will Loop the proccess of Displaying the Menu and Directing the user to the Right Subs based upon their input

        GameOver(theTimeCreated)
        Console.ReadKey()
    End Sub

    Sub ChangeName(ByVal pet As VirtualPet)
        Console.Clear()
        Console.WriteLine("What do you want to change your pets name to?")
        Dim newpetname As String = Console.ReadLine()
        pet.ChangeName(newpetname)
        Console.Clear()
        Console.WriteLine($"Your pets name has been changed to {pet.GetName}")
        Console.ReadKey()
    End Sub

    Sub FeedPet(ByVal Pet As VirtualPet, ByRef PreviousTime As Double, ByVal milk As CupOfMilk, ByVal fish As Fish, ByVal RottenFlesh As RottenFlesh)
        Console.Clear()
        Console.WriteLine($"What would you like to feed {Pet.GetName}?  {milk.GetName} <m> or {fish.GetName} <f> or {RottenFlesh.GetName} <r> ???")
        Dim input As String = Console.ReadLine()

        If LCase(input) = "f" Then

            Pet.IncreaseHealthFood(fish.GetHealth)
            Console.WriteLine($"{fish.GetPicture}")
            Console.ReadKey()
            Console.WriteLine($"{fish.GetComment}")
            Console.ReadKey()
            Console.WriteLine($"{Pet.GetName} ate the {fish.GetName} and gained {fish.GetHealth} health!")

        ElseIf LCase(input) = "m" Then

            Pet.IncreaseHealthFood(milk.GetHealth)
            Console.WriteLine($"{milk.GetPicture}")
            Console.ReadKey()
            Console.WriteLine($"{milk.GetComment}")
            Console.ReadKey()
            Console.WriteLine($"{Pet.GetName} Drank the {milk.GetName} and gained {milk.GetHealth} health!")

        ElseIf LCase(input) = "r" Then

            Pet.IncreaseHealthFood(RottenFlesh.GetHealth)
            Console.WriteLine($"{RottenFlesh.GetPicture}")
            Console.ReadKey()
            Console.WriteLine($"{RottenFlesh.GetComment}")
            Console.ReadKey()
            Console.WriteLine($"{Pet.GetName} ate the {RottenFlesh.GetName} and Gained {RottenFlesh.GetHealth} health...")

        End If

        LowerHealth(Pet, PreviousTime)
        PreviousTime = Timer
        Console.WriteLine($"{Pet.GetName} is now on {Pet.DisplayHealth} Health")
        Console.ReadKey()
    End Sub

    Sub PlayWithPet(ByVal Pet As VirtualPet, ByRef PreviousTime As Double)
        Console.Clear()
        Console.WriteLine("How long do you want to play for? (In seconds)")
        Dim timeToPlay As Integer = Console.ReadLine()
        Console.Clear()
        Dim tick As Integer = 0
        Dim HealthGained As Integer
        Dim RandomX As Integer
        Dim RandomY As Integer
        Do
            Console.SetCursorPosition(0, 0)
            Console.WriteLine("Playing...")

            RandomX = Int(Rnd() * (Console.WindowWidth - 20) + 20)
            RandomY = Int(Rnd() * (Console.WindowHeight - 10) + 10)

            Console.SetCursorPosition(RandomX, RandomY)
            Console.Write(Pet.GetMood)
            System.Threading.Thread.Sleep(500)
            Console.SetCursorPosition(RandomX, RandomY)
            Console.WriteLine("             ")
            System.Threading.Thread.Sleep(500)
            tick += 1


        Loop Until tick = timeToPlay
        HealthGained = Pet.IncreaseHealth(timeToPlay)
        Console.WriteLine($"Your Pet gained {HealthGained} Health!")
        LowerHealth(Pet, PreviousTime)
        PreviousTime = Timer
        Console.WriteLine($"{Pet.GetName} is now on {Pet.DisplayHealth} Health")
        Console.ReadKey()
    End Sub

    Sub GameOver(ByVal theTimeCreated As Double)
        Console.Clear()
        Console.WriteLine("Your pet seems to have died...")
        Console.WriteLine("Please Take Better Care next time...")

        Dim TimeSurvived As Double
        Dim CurrentTimer As Double = Timer
        TimeSurvived = Int(CurrentTimer - theTimeCreated)
        TimeSurvived = TimeSurvived / 60
        Console.WriteLine($"You lasted {TimeSurvived} Minutes.")
    End Sub

    Function LowerHealth(ByVal pet As VirtualPet, ByVal previousTime As Double) As Integer
        Dim amountToLowerBy As Integer
        Dim CurrentTime As Double = Timer
        amountToLowerBy = Int(CurrentTime - previousTime)
        pet.LowerHealth(amountToLowerBy)
        Return amountToLowerBy
    End Function

    Sub DisplayStats(ByVal pet As VirtualPet, ByVal theTime As Date)
        Console.WriteLine($"{pet.GetName}'s Statistics!")
        Console.WriteLine()

        Console.WriteLine($"Maximum Health: {pet.GetMaxHealth}")
        Console.WriteLine($"Current Health: {pet.DisplayHealth} (-{pet.GetHealthLost})")
        Console.WriteLine($"{pet.GetName}'s Current Mood ---> {pet.GetMood} ")
        Console.WriteLine()
        Console.WriteLine($"{pet.GetName} was created on {theTime}")
        Console.WriteLine()
        Console.WriteLine("Press Any Key to return to the menu!")
    End Sub

    Sub MainMenu(ByVal Pet As VirtualPet)
        Console.Clear()
        Console.WriteLine($"Virtual Pet {Pet.GetName}'s Menu")
        Console.WriteLine()
        Console.WriteLine("1.   Feed Pet")
        Console.WriteLine("2.   Play with pet")
        Console.WriteLine("3.   Display Pet Statistics")
        Console.WriteLine("4.   Change Pets Name")
        Console.WriteLine("9.   Exit")
    End Sub

    Function GetMenuChoice() As String
        Dim MenuChoice As String
        MenuChoice = Console.ReadLine()
        Return MenuChoice
    End Function


End Module

Public Class VirtualPet
    Dim maxHealth As Integer = 2000
    Dim CurrentHealth As Integer = 1750
    Dim DefaultName As String = "Your Pet"
    Dim HappyPicture As String = " \(^.^)/"
    Dim MediumPicture As String = "'('_')'"
    Dim SadPicture As String = "\(╥_╥)/"
    Dim HealthLostPerSecond As Integer = 5 ' This changes how fast the pet Will die.
    Dim isAlive As Boolean = True
    Dim petName As String

    Public Sub ChangeName(ByVal newName As String)
        petName = newName
    End Sub

    Public Sub LowerHealth(ByVal Amount As Integer)
        Dim thehealthLost As Integer = Amount * HealthLostPerSecond
        CurrentHealth = CurrentHealth - (thehealthLost)
        healthLost = thehealthLost
    End Sub
    Dim healthLost As Integer

    Public Function IncreaseHealth(ByVal Amount As Integer)
        Dim thehealthGained As Integer = Amount * 10
        CurrentHealth = CurrentHealth + (thehealthGained)
        Return thehealthGained
    End Function

    Public Function IncreaseHealthFood(ByVal Amount As Integer)
        Dim thehealthGained As Integer = Amount
        CurrentHealth = CurrentHealth + (thehealthGained)
        Return thehealthGained
    End Function

    Public Function GetHealthLost()
        Return healthLost
    End Function

    Public Function CheckIsAlive()
        If CurrentHealth < 0 Then
            isAlive = False
        Else
        End If
        Return isAlive
    End Function

    Public Function GetMood()
        If CurrentHealth < 600 Then
            Return SadPicture
        ElseIf CurrentHealth < 1350 Then
            Return MediumPicture
        Else
            Return HappyPicture
        End If
    End Function

    Public Function GetName()
        Return petName
    End Function

    Function GetMaxHealth()
        Return maxHealth
    End Function

    Public Function DisplayHealth()
        If CurrentHealth > maxHealth Then
            Return maxHealth
        Else
            Return CurrentHealth
        End If

    End Function

    Public Sub New(ByVal inputPetName As String)
        petName = inputPetName
        Console.WriteLine(petName)
    End Sub 'This will assign the Chosen Pet name to the pet.

End Class

Public MustInherit Class Food
    Protected comment As String
    Protected health As Integer
    Protected name As String
    Protected picture As String

    Public Sub New()
        comment = "Hello"
        health = 0
        name = "Food"
        picture = " "
    End Sub

    Public Function GetComment()
        Return comment
    End Function

    Public Function GetHealth()
        Return health
    End Function

    Public Function GetName()
        Return name
    End Function

    Public Function GetPicture()
        Return picture
    End Function

End Class

Public Class CupOfMilk
    Inherits Food
    Dim defaultHealth As Integer

    Public Sub New(ByVal inputHealth As Integer, ByVal inputComment As String, ByVal inputName As String, ByVal inputPicture As String)
        MyBase.New()
        health = inputHealth
        comment = inputComment
        name = inputName
        picture = inputPicture
    End Sub

End Class

Public Class Fish
    Inherits Food
    Dim defaultHealth As Integer

    Public Sub New(ByVal inputHealth As Integer, ByVal inputComment As String, ByVal inputName As String, ByVal inputPicture As String)
        MyBase.New()
        health = inputHealth
        comment = inputComment
        name = inputName
        picture = inputPicture
    End Sub

End Class

Public Class RottenFlesh
    Inherits Food
    Dim defaultHealth As Integer

    Public Sub New(ByVal inputHealth As Integer, ByVal inputComment As String, ByVal inputName As String, ByVal inputPicture As String)
        MyBase.New()
        health = inputHealth
        comment = inputComment
        name = inputName
        picture = inputPicture
    End Sub

End Class
